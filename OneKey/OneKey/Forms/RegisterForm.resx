<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnReg.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARsAAABTCAYAAACvUaOUAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAMISURBVHhe7dSBiqswEAXQ/v9P9+EDl6w70WhGTe05cGG7jUkszH29AS6gbIBLDFM2r9dLRJIz
        kttuE/0wInJu7nTp6dHLi8h9udLpp0UvGAXIF81alCucdkr0QmWA60WzWOZM6btHLzAHGEc0o3POkLpr
        dOkpwLiimZ2TKWW36JJTgM8RzfCULN07nXk54HpnzXTXLmddCrhf9nwffjrzEsCYlnPeM+u7n8w8HBhf
        1sx3lw3wfMu5PzL7u57oPQz4bD0d0Ly65xDgGXp6oGl1zwHAsxztg82VRzcGnutIL+wqG4BZ2Q0t/bC6
        Yu9mwHfZ0w/VFeUmLRsB32dPTzSVDUBNa1eE35YPb20AfLfWvtgsG4AtLZ3x55vyobUHAUpbvbFaNgCt
        trpD2QApyu6I+uPXf9YWAmxZ6xBlA6RZ6xBlA6QpO2TZIz+fagsA9qh1ibIBUtW6RNkAqWpdomyAVLUu
        +f+p9iXAEVGnKBsgXdQpygZIF3WKsgHSRZ2ibIB0UacoGyBd1CnKBkgXdYqyAdJFnaJsgHRRpygbIF3U
        KcoGSBd1irIBUpV9UnbKz1/RlwB71bpE2QCpal2ibIBUtS5RNkCaskeWXfLrU20RQIu1DlE2QJq1DlE2
        QIqyP6IO+fOftcUANVvdoWyAFFvdsVo2tYcASi2dEX7T8iDApOyLtc7YLJu1hwFau6L6besGwPcqe2Kr
        K5rKZmsT4Dvt6YjVFXs2Ar5L2Q8tHdFcNi2bAd/hSDdsrjqyKfBcRzuhaeXRzYHnOdoFzavLA/YeAjxD
        Tw/sWt1zEPDZeud/9xO9BwKfZTnzR+e+u2yOHgyML3PeDz2ZeQFgTNlz3vV05kWAMSznOmu2u3c562LA
        taJZnpIlZafoglOAzxDN75RMabtFF50DjCea1TlnSN81uvgc4F7RXJY502m7Ry9SBrhGNH/LXOH0U6IX
        iwLki2atzJUuPS162WWAPtFclbnLbSdHP4KI5GcUw9wk+pFEpD+jGOcmC9GPJiL7MpJhywZ4FmUDXOD9
        /gfsnTyZImXQMgAAAABJRU5ErkJggg==
</value>
  </data>
</root>